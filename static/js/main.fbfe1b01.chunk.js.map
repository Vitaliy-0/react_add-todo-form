{"version":3,"sources":["components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["TodoList","todos","changeStatus","className","map","text","id","title","userId","completed","classNames","toUpperCase","slice","toLowerCase","type","checked","onChange","users","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedTodos","todo","user","find","App","state","todoTitle","isUserUnselected","isTitleEmpty","onSelect","event","setState","Number","target","value","currentTarget","length","replace","onSubmit","trim","preventDefault","Math","max","clearForm","this","visibleTodos","htmlFor","required","placeholder","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbfe1b01.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  changeStatus: (id: number) => void,\n};\n\nconst normalizeText = (text: string) => {\n  return text[0].toUpperCase()\n    + text.slice(1).toLowerCase();\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, changeStatus }) => (\n  <div className=\"Todo\">\n    <ul className=\"Todo__list\">\n      {todos.map(({\n        id,\n        title,\n        userId,\n        completed,\n      }) => (\n        <li\n          key={id}\n          className={classNames('Todo__item', { 'Todo--completed': completed })}\n        >\n          <div className=\"Todo__element\">\n            <span className=\"Todo__id\">\n              {`${id} - `}\n            </span>\n\n            <span className=\"Todo__status\">\n              {completed ? 'Todo completed' : 'Still in work...'}\n            </span>\n\n            <span className=\"Todo__title\">\n              {`${normalizeText(title)}`}\n            </span>\n\n            <span className=\"Todo__userId\">\n              {` ${userId}`}\n            </span>\n          </div>\n\n          <input\n            type=\"checkbox\"\n            checked={completed}\n            onChange={() => {\n              changeStatus(id);\n            }}\n          />\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { todos as todosFromServer } from './api/todos';\nimport users from './api/users';\nimport { Todo } from './types/Todo';\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId) || null,\n}));\n\ninterface State {\n  todos: Todo[],\n  todoTitle: string,\n  userId: number,\n  isUserUnselected: boolean,\n  isTitleEmpty: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    todos: preparedTodos,\n    todoTitle: '',\n    userId: 0,\n    isUserUnselected: false,\n    isTitleEmpty: false,\n  };\n\n  onSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      userId: Number(event.target.value),\n      isUserUnselected: false,\n    });\n  };\n\n  onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n\n    if (value.length <= 80) {\n      this.setState({\n        todoTitle: event.target.value.replace(/[^A-Za-zа-яА-ЯёЁ0-9_\\s]/g, ''),\n        isTitleEmpty: false,\n      });\n    }\n  };\n\n  onSubmit = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    const { userId, todoTitle } = this.state;\n\n    if (userId === 0) {\n      this.setState(({ isUserUnselected: true }));\n    }\n\n    if (todoTitle.trim() === '') {\n      this.setState(({ isTitleEmpty: true }));\n    }\n\n    event.preventDefault();\n\n    if (userId !== 0 && todoTitle.trim() !== '') {\n      this.setState(state => ({\n        todos: [\n          ...state.todos,\n          {\n            id: Math.max(...state.todos.map(todo => todo.id)) + 1,\n            title: state.todoTitle,\n            userId: state.userId,\n            completed: false,\n          },\n        ],\n      }));\n\n      if (todoTitle.trim() !== '') {\n        this.clearForm();\n      }\n    }\n  };\n\n  clearForm = () => {\n    this.setState({\n      todoTitle: '',\n      userId: 0,\n    });\n  };\n\n  changeStatus = (id: number) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => {\n        if (todo.id === id) {\n          // eslint-disable-next-line no-param-reassign\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  render() {\n    const {\n      todos,\n      todoTitle,\n      userId,\n      isUserUnselected,\n      isTitleEmpty,\n    } = this.state;\n\n    const visibleTodos = [...todos];\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <form className=\"form\">\n          <label htmlFor=\"title\">\n            Title:\n            <input\n              title=\"Enter your todo, max 80 characters\"\n              required\n              className=\"form__todo\"\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              placeholder=\"Enter a title\"\n              value={todoTitle}\n              onChange={this.onChange}\n            />\n          </label>\n          {isTitleEmpty && <span id=\"error\">Please enter the title</span>}\n\n          <select\n            className=\"form__select\"\n            title=\"Choose a user to make this todo\"\n            required\n            name=\"user\"\n            id=\"user\"\n            value={userId}\n            onChange={this.onSelect}\n          >\n            <option value=\"\">\n              Choose a user\n            </option>\n            {users.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {isUserUnselected && <span id=\"error\">Please choose a user</span>}\n          <button\n            className=\"button\"\n            type=\"submit\"\n            title=\"Click to add todo\"\n            onClick={this.onSubmit}\n          >\n            Add\n          </button>\n        </form>\n\n        <TodoList todos={visibleTodos} changeStatus={this.changeStatus} />\n      </div>\n    );\n  }\n}\n","/* eslint-disable max-len */\n\nexport const todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}